name: Generate config
on:
  workflow_dispatch:
  schedule:
    - cron: "0 19 * * *"
  push:
    branches:
      - main
    paths-ignore:
      - "**.md"

jobs:
  Update:
    runs-on: ubuntu-latest
    steps:
    - name: Clone Repository
      uses: actions/checkout@main

    - name: Set variables
      run: |
        echo "update_version=$(date -d '+8 hours' +%Y-%m-%d)" >> ${GITHUB_ENV}
        echo "fake_ip_filter=https://raw.githubusercontent.com/juewuy/ShellCrash/dev/public/fake_ip_filter.list" >> $GITHUB_ENV
      shell: bash

    - name: Generate fakeip-user.yaml
      run: |
        mkdir -p ./tmp/ ./clash/ ./sing-box/
        cat <<EOF > ./clash/fakeip-user.yaml
        sniffer:
          enable: true
          parse-pure-ip: true
          sniff: {HTTP: {ports: [80, 8080-8880], TLS: {ports: [443, 8443]}, QUIC: {ports: [443, 8443]}}
          skip-domain: ['Mijia Cloud']

        dns:
          enable: true
          prefer-h3: true
          ipv6: true
          listen: 0.0.0.0:1053
          fake-ip-range: 198.18.0.1/16
          enhanced-mode: fake-ip
          fake-ip-filter:
        EOF
        curl -sSL ${fake_ip_filter} | grep -v '#' | sed '/^\s*$/d' | sed "s/.*/'&'/" | sed 's/^/    - /' >> ./clash/fakeip-user.yaml
        cat <<EOF >> ./clash/fakeip-user.yaml
          nameserver:
            - 'https://223.5.5.5/dns-query#h3=true'
            - https://1.12.12.12/dns-query
        EOF

    - name: Generate geodata-dns.json
      run: |
        cat <<EOF > ./sing-box/geodata-dns.json
        {
          "dns": {
            "servers": [
              { "tag": "dns_block", "address": "rcode://refused" },
              { "tag": "dns_alidns", "address": "h3://223.5.5.5/dns-query", "detour": "DIRECT" },
              { "tag": "dns_dnspod", "address": "https://1.12.12.12/dns-query", "detour": "DIRECT" },
              { "tag": "dns_fakeip", "address": "fakeip" }
            ],
            "rules": [
              { "outbound": "any", "server": [ "dns_alidns", "dns_dnspod" ] },
              { "clash_mode": "Direct", "server": [ "dns_alidns", "dns_dnspod" ] },
              { "clash_mode": "Global", "server": "dns_fakeip", "rewrite_ttl": 1 },
              { "geosite": [ "category-ads-all" ], "server": "dns_block" },
        EOF
        curl -sSL ${fake_ip_filter} | grep -Ev '#|\..*\*\.' | grep -E '\*|\+' | sed 's/^\*.//' | sed 's/^+.//' | awk '{printf "\"%s\", ",$1}' | sed 's/, $//' > ./tmp/domain_suffix.txt
        curl -sSL ${fake_ip_filter} | grep -Ev '#|\..*\*\.' | grep -Ev '\*|\+' | awk '{printf "\"%s\", ",$1}' | sed 's/Mijia/Mijia Cloud/' | sed 's/, $//' > ./tmp/domain.txt
        domain_suffix=$(cat ./tmp/domain_suffix.txt)
        domain=$(cat ./tmp/domain.txt)
        cat <<EOF >> ./sing-box/geodata-dns.json
              { "domain_keyword": ".", "invert": true, "query_type": [ "A", "AAAA" ], "server": [ "dns_alidns", "dns_dnspod" ] },
              { "domain_suffix": [ ${domain_suffix} ], "query_type": [ "A", "AAAA" ], "server": [ "dns_alidns", "dns_dnspod" ] },
              { "domain": [ ${domain} ], "query_type": [ "A", "AAAA" ], "server": [ "dns_alidns", "dns_dnspod" ] },
              { "type": "logical", "mode": "and", "rules": [ { "domain_keyword": [ "time" ], "query_type": [ "A", "AAAA" ] }, { "domain_keyword": [ "com" ], "query_type": [ "A", "AAAA" ] } ], "server": [ "dns_alidns", "dns_dnspod" ] },
              { "type": "logical", "mode": "and", "rules": [ { "domain_keyword": [ "ntp" ], "query_type": [ "A", "AAAA" ] }, { "domain_keyword": [ "com" ], "query_type": [ "A", "AAAA" ] } ], "server": [ "dns_alidns", "dns_dnspod" ] },
              { "type": "logical", "mode": "and", "rules": [ { "domain_keyword": [ "xbox" ], "query_type": [ "A", "AAAA" ] }, { "domain_keyword": [ "com" ], "query_type": [ "A", "AAAA" ] } ], "server": [ "dns_alidns", "dns_dnspod" ] },
              { "domain_keyword": [ "stun" ], "query_type": [ "A", "AAAA" ], "server": [ "dns_alidns", "dns_dnspod" ] },
              { "geosite": [ "microsoft@cn", "apple-cn", "google-cn", "category-games@cn", "cn", "private" ], "query_type": [ "A", "AAAA" ], "server": [ "dns_alidns", "dns_dnspod" ] },
              { "domain_regex": [ ".*" ], "query_type": [ "A", "AAAA" ], "server": "dns_fakeip", "rewrite_ttl": 1 }
            ],
            "final": [ "dns_alidns", "dns_dnspod" ],
            "strategy": "prefer_ipv4",
            "independent_cache": true,
            "reverse_mapping": true,
            "fakeip": { "enabled": true, "inet4_range": "198.18.0.0/15", "inet6_range": "fc00::/18" }
          }
        }
        EOF

    - name: Generate ruleset-dns.json
      run: |
        sed -e 's/geosite/rule_set/' -e 's/category-ads-all/ads/' -e 's/microsoft@cn/microsoft-cn/' -e 's/category-games@cn/games-cn/' ./sing-box/geodata-dns.json > ./sing-box/ruleset-dns.json

    - name: Release and upload `clash` assets
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        release_name: clash
        tag: clash
        overwrite: true
        body: "[Clash](https://github.com/Dreamacro/clash) 配置文件"
        file_glob: true
        file: ./clash/*

    - name: Release and upload `clash` assets
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        release_name: sing-box
        tag: sing-box
        overwrite: true
        body: "[sing-box](https://github.com/SagerNet/sing-box) 配置文件"
        file_glob: true
        file: ./sing-box/*

    - name: Git push assets to "clash" branch
      run: |
        cd ./clash/ || exit 1
        git init
        git config --local user.name "github-actions[bot]"
        git config --local user.email "github-actions[bot]@users.noreply.github.com"
        git checkout -b clash
        git add .
        git commit -m "Clash 配置文件更新于 ${update_version}"
        git remote add origin "https://${{ github.actor }}:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}"
        git push -f -u origin clash

    - name: Git push assets to "sing-box" branch
      run: |
        cd ./sing-box/ || exit 1
        git init
        git config --local user.name "github-actions[bot]"
        git config --local user.email "github-actions[bot]@users.noreply.github.com"
        git checkout -b sing-box
        git add .
        git commit -m "sing-box 配置文件更新于 ${update_version}"
        git remote add origin "https://${{ github.actor }}:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}"
        git push -f -u origin sing-box

    - name: Purge jsDelivr CDN
      run: |
        cd ./clash/ || exit 1
        for file in $(ls); do
          curl -i "https://purge.jsdelivr.net/gh/${{ github.repository }}@clash/${file}"
        done
        cd ../sing-box/ || exit 1
        for file in $(ls); do
          curl -i "https://purge.jsdelivr.net/gh/${{ github.repository }}@sing-box/${file}"
        done

    - name: Delete old workflow runs
      uses: Mattraks/delete-workflow-runs@v2
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        repository: ${{ github.repository }}
        retain_days: 3
        keep_minimum_runs: 1
